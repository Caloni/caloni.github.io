<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>projects on Blogue do Caloni</title>
    <link>http://www.caloni.com.br/tags/projects/</link>
    <description>Recent content in projects on Blogue do Caloni</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 27 Jun 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.caloni.com.br/tags/projects/" rel="self" type="application/rss+xml" />
    
     
        <item>
  <title>Pgn2art</title>
  <link>http://www.caloni.com.br/pgn2art/</link>
  <pubDate>2020-06-27</pubDate>
  
  <guid>http://www.caloni.com.br/pgn2art/</guid>
  <description>&lt;p&gt;Meu sonho de consumo para acompanhar partidas de xadrez é às cegas, apenas lendo ou ouvindo o próximo lance e imaginando em minha cabeça o tabuleiro. Porém, enquanto não tenho essa habilidade, um meio-termo aceitável é ver um tabuleiro em ascii art se modificando a cada lance. É possível acompanhar uma partida dessa forma como se estivesse lendo um livro, e por isso esse formato é prático, também, pois posso jogar esse ascii art no meu Kindle.&lt;/p&gt;
&lt;p&gt;Usando a biblioteca python-chess fiz um pequeno script que recebe o endereço de PGNs (o formato com que se grava partidas de xadrez) por URL ou path local e cospe esses tabuleiros em ascii art. Com isso pode redirecionar para um arquivo texto e enviar para o Kindle ou ler de qualquer lugar, em formato estático, a tradução da partida.&lt;/p&gt;
&lt;p&gt;O próximo passo, antes de ler às cegas, é transformar a leitura do tabuleiro bidimensional para a leitura do formato FEN, que é o formato usado para gravar posições de um tabuleiro.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Transmission</title>
  <link>http://www.caloni.com.br/transmission/</link>
  <pubDate>2020-06-01</pubDate>
  
  <guid>http://www.caloni.com.br/transmission/</guid>
  <description>&lt;p&gt;Dia de fazer funcionar o download automágico de legendas depois que o Transmission baixou meu Netflix caseiro. O download funcionou, mas não foi dos melhores, pois o sincronismo e o encoding veio errado, e o rename de _pb para o nome do arquivo não está acontecendo rodando pelo transmission-daemon. Fora isso tá com tudo em cima.&lt;/p&gt;
&lt;p&gt;No final do dia a correção era mais simples que imaginava: eu só precisava desabilitar duas flags: o uso de sufixo no nome do arquivo salvo e a flag que força todo arquivo a ser salvo como utf8 (os arquivos em português do Brasil são salvos no encoding do Windows, o ISO-8859-1 ou Windows 1252 para os mais íntimos).&lt;/p&gt;
&lt;p&gt;No final do dia todos os bugs conterão uma correção trivial escondida do outro lado do muro chinês.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Bug no Calonibot Rodando Como Serviço</title>
  <link>http://www.caloni.com.br/bug-no-calonibot-rodando-como-servico/</link>
  <pubDate>2020-05-10</pubDate>
  
  <guid>http://www.caloni.com.br/bug-no-calonibot-rodando-como-servico/</guid>
  <description>&lt;p&gt;Esse não é o primeiro bug, nem será o último, mas serve de lição. Se quiser rodar um daemon no seu raspberrypi que atualize seu repo git de tempos em tempos ele poderá falhar, já que que roda em conta de root e essa conta não possui suas credenciais. Nem deveria, para ser sincero...&lt;/p&gt;
&lt;p&gt;Uma maneira de tornar a leitura de seu repo relativamente segura é entregar credenciais de somente leitura para seu serviço. Foi o que eu fiz no caso do calonibot, que atualiza seu próprio repositório de tempos em tempos porque nele está contido o index.xml principal do site para ele realizar uma busca mais completa quando você pedir a ele (que é atualizado sempre que publico um novo artigo).&lt;/p&gt;
&lt;p&gt;Para que isso funcione para repositórios configurados com chave ssh você terá que copiar essa chave para o diretório /root/.ssh, como se fosse a home do seu usuário. Depois de feito isso reinicie o serviço e ele deverá funcionar como novo.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Winmock</title>
  <link>http://www.caloni.com.br/winsock-mock/</link>
  <pubDate>2020-04-10</pubDate>
  
  <guid>http://www.caloni.com.br/winsock-mock/</guid>
  <description>&lt;p&gt;Testar sistemas com rede simulada pode ser muito complexo ou muito simples. Se for feito em C ou se os endpoints forem em C é muito simples: basta trocar as funções originais pelas suas. Como tudo em C são funções com nome bem definido e assinatura flexível (você não precisa declarar a assinatura da função, ou pode mudar no meio do caminho).&lt;/p&gt;
&lt;p&gt;Criei este pequeno projeto de mock da winsock para exemplificar. Ele utiliza um recurso interessante da winsock, um define chamado INCLWINSOCKAPIPROTOTYPES, que pode desabilitar a publicação das assinaturas das funções de socket do header winsock2.h. E por que isso é importante? Porque essas assinaturas já possuem a informação que essas funções deverão ser importadas de uma DLL (no caso a Ws232.dll). Isso muda o nome da função C. Além disso, a convenção de chamada da API do Windows é baseada em Pascal, e não cdecl, sendo a desvantagem não existir número de argumentos variáveis na pilha. Adiante veremos como isso é útil para simplificar nosso código de mock.&lt;/p&gt;
&lt;p&gt;Em primeiro lugar vamos montar um projeto para iniciar um client socket para exemplificar o uso da winsock. Na verdade, de qualquer UNIX socket.&lt;/p&gt;
&lt;p&gt;Esse código pode ser testado diretamente do Blogue do Caloni. Só que não. Ele não está apto no momento a retornar o conhecido ack do IRC. Um dia talvez. Mas no momento não. As funções com o prefixo winmock estão no projeto C client que usa as funções de socket para se comunicar com o servidor. Alguns snippets:&lt;/p&gt;
&lt;p&gt;As funções C do winsock/socket, connect, send, recv, select, etc, são apenas funções C cujos nomes são conhecidíssimos. Elas são linkadas com programas que usam alguma biblioteca de socket. Nada impede que nós mesmos sobrescrevamos essas funções para implementá-las nós mesmos em nosso programa. É isso o que nosso projeto de unittest integrado faz, usando o define já citado para evitar que as funções winsock tomem o lugar.&lt;/p&gt;
&lt;p&gt;A linha mais importante é &amp;quot;adddefinitions(-DINCLWINSOCKAPIPROTOTYPES=0)&amp;quot;, que irá manter as assinaturas do header da winsock longe da compilação.&lt;/p&gt;
&lt;p&gt;Tanto a INCLWINSOCKAPIPROTOTYPES quanto a INCLWINSOCKAPITYPEDEFS podem ser muito úteis para incluir algumas coisas do header, mas não todas. E como os protótipos das funções winsock não estão disponíveis, podemos implementar as nossas:&lt;/p&gt;
&lt;p&gt;Com isso o linker irá usar nossas funções em vez da lib de winsock, e na execução podemos simular eventos e operações de rede. Para flexibilizar para que cada teste monte seu ambiente transformamos a implementação em chamadas de ponteiros de função que podem ser trocadas. Por padrão preenchemos esses ponteiros com uma função que não faz nada. Note que com a convenção de chamadas de C não precisamos especificar os argumentos e funções com diferentes tipos e números de parâmetros podem chamar a mesma função.&lt;/p&gt;
&lt;p&gt;Agora é possível escrever um sistema de simulação do Blogue do Caloni que retorna o ack que precisamos para que o teste funcione.&lt;/p&gt;
&lt;p&gt;extern &amp;quot;C&amp;quot; {
}&lt;/p&gt;
&lt;p&gt;using namespace std;&lt;/p&gt;
&lt;p&gt;static string lastsend;&lt;/p&gt;
&lt;p&gt;extern &amp;quot;C&amp;quot; {&lt;/p&gt;
&lt;p&gt;int select_default(int nfds, fd_set FAR* readfds, fd_set FAR* writefds, fd_set FAR* exceptfds, const struct timeval FAR* timeout)
{
}&lt;/p&gt;
&lt;p&gt;int getaddrinfo_default(PCSTR pNodeName, PCSTR pServiceName, const ADDRINFOA* pHints, PADDRINFOA* ppResult)
{
}&lt;/p&gt;
&lt;p&gt;int send_default(SOCKET s, const char FAR* buf, int len, int flags)
{
}&lt;/p&gt;
&lt;p&gt;int recv_default(SOCKET s, char FAR* buf, int len, int flags)
{&lt;/p&gt;
&lt;p&gt;}
}&lt;/p&gt;
&lt;p&gt;class clientTest : public ::testing::Test {
protected:
clientTest() {
};&lt;/p&gt;
&lt;p&gt;~clientTest() override {
}&lt;/p&gt;
&lt;p&gt;void SetUp() override {
}&lt;/p&gt;
&lt;p&gt;void TearDown() override {
}&lt;/p&gt;
&lt;p&gt;// your stuff
};&lt;/p&gt;
&lt;p&gt;TESTF(clientTest, ConnectSendReceive)
{
struct CONNECTION* conn = NULL;
if (winmock_connect(&amp;quot;caloni.com.br&amp;quot;, 80, &amp;amp;conn) == 0)
{
}
}&lt;/p&gt;
&lt;p&gt;Uma observação importante sobre getaddrinfo: ele não possui esse salvaguarda de define e irá dar erro no linker de redefinição. Porém, apenas se incluirmos o header onde ele é definido. Podemos nos proteger com o mesmo define no código-fonte original do client:&lt;/p&gt;
&lt;p&gt;Durante a compilação do unittest warnings como os abaixo aparecerão, mas não se preocupe, pois sabemos o que estamos fazendo.&lt;/p&gt;
&lt;p&gt;Para se divertir brincando de rede de mentirinha, baixe o projeto completo.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Houaiss Para *</title>
  <link>http://www.caloni.com.br/houaiss-para/</link>
  <pubDate>2014-10-25</pubDate>
  
  <guid>http://www.caloni.com.br/houaiss-para/</guid>
  <description>&lt;p&gt;O projeto Houaiss2Babylon, iniciado há mais de 6 anos, já devia estar ultrapassado. Porém, cada vez mais pessoas compartilham seus usos e desusos do que foi um dia uma base de dados ofuscada e presa a apenas uma interface Windows. Agora, além de já ter sido convertido para Kindle, em Python e agora através do nodejs para o MySql!&lt;/p&gt;
&lt;p&gt;O jornalista e programador Arthur da Paz desenvolveu esta última novidade no programa e gentilmente compartilhou conosco direto no repositório original do HouaissParaBabylon, colaborando felizmente para que esse nome perdesse um pouco mais do sentido (Babylon já está meio ultrapassado, não?). Além disso ele encontrou a solução para um bug que invertia a ordem de apresentação das Rubricas, cujos detalhes ele explica nos comentários do post sobre a última versão.&lt;/p&gt;
&lt;p&gt;Muito obrigado ao Da Paz e a todos que colaboram e compartilham melhorias para esse projeto. Um dicionário não é nada sem as pessoas que o utilizam.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Houaiss para Babylon em Python!</title>
  <link>http://www.caloni.com.br/houaiss-para-babylon-em-python/</link>
  <pubDate>2014-02-27</pubDate>
  
  <guid>http://www.caloni.com.br/houaiss-para-babylon-em-python/</guid>
  <description>&lt;p&gt;O Fabio Montefuscolo expandiu mais ainda o acesso do conversor Houaiss para Babylon implementando uma versão em Python, uma linguagem que estou aprendendo a adorar. Tudo é mais simples, rápido e direto em Python, e o código que ele escreveu utiliza todo esse potencial:&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Houaiss 1.3</title>
  <link>http://www.caloni.com.br/houaiss-1-3/</link>
  <pubDate>2011-04-28</pubDate>
  
  <guid>http://www.caloni.com.br/houaiss-1-3/</guid>
  <description>&lt;p&gt;Os problemas relacionados com acesso negado durante a conversão/construção do dicionário foram corrigidos na novíssima versão disponível no GitHub.&lt;/p&gt;
&lt;p&gt;Erroneamente imaginando que a falta de acesso tinha alguma coisa a ver com a escrita de arquivos no disco, ou até mesmo com a execução de processos, descobri depurando (o bom e velho depurador) que a origem do acesso negado estava na função AssignProcessToJobObject.aspx). Misteriosamente, no Windows 7, ao chamar essa função ocorre esse erro, independente da execução ser como administrador ou não.&lt;/p&gt;
&lt;p&gt;Como já está se tornando tradição de uns tempos pra cá, a solução veio de um artigo do Stack Overflow, cuja melhor solução foi exatamente a que eu segui: inserir o manifesto do UAC e usar a flag CREATEBREAKAWAYFROMJOB.&lt;/p&gt;
&lt;p&gt;Agora é só esperar pelo próximo bug =)&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Houaiss no Kindle</title>
  <link>http://www.caloni.com.br/houaiss-no-kindle/</link>
  <pubDate>2011-03-22</pubDate>
  
  <guid>http://www.caloni.com.br/houaiss-no-kindle/</guid>
  <description>&lt;p&gt;O blogue de José Ribeiro Pena Neto, aparentemente recém-criado, conseguiu utilizar minha solução de conversão do dicionário Houaiss para Babylon em algo mais incrívei ainda: converter, em alguns passos, a base de dados do Houaiss para o Amazon Kindle.&lt;/p&gt;
&lt;p&gt;De uma maneira simples e efetiva, ele cita o passo-a-passo para a conversão da base Houaiss para o formato Babylon e, a partir disso, reconverter para o formato usado pelo gratuito e multiplataforma Stardict.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Atualizando HouaissParaBabylon no saite</title>
  <link>http://www.caloni.com.br/atualizando-houaissparababylon-no-saite/</link>
  <pubDate>2010-10-22</pubDate>
  
  <guid>http://www.caloni.com.br/atualizando-houaissparababylon-no-saite/</guid>
  <description>&lt;p&gt;O último comentário no meu último artigo sobre o conversor Houaiss para Babylon me fez lembrar de algo muito importante: eu não atualizei o branch do saite com a última versão. Deve ser por isso que as pessoas estão tendo problemas com o uso do código. Resolvo isso já:&lt;/p&gt;
&lt;p&gt;Essa é a versão 1.2 descrita no meu último artigo sobre o projeto.&lt;/p&gt;
&lt;p&gt;De qualquer forma, qual não foi minha surpresa quando tentei recompilar o projeto e ocorreram erros no atlcom. Depois de uma breve pesquisa descobri que precisava rodar alguns &amp;quot;patches&amp;quot; para o include funcionar direito. Então, provavelmente, Willians, era esse o problema. Tente de novo.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>Houaiss Para Babylon!</title>
  <link>http://www.caloni.com.br/houaiss-para-babylon-12/</link>
  <pubDate>2010-04-08</pubDate>
  
  <guid>http://www.caloni.com.br/houaiss-para-babylon-12/</guid>
  <description>&lt;p&gt;Os últimos comentários de Henrique Esteves (quando havia seção de comentários no blogue) sobre o HouaissParaBabylon me fizeram dar mais uma fuçada nele e ver se tento deixá-lo compatível com o Houaiss 3. Foram apenas algumas horas e acho que resolvi os probleminhas relacionados com a troca do registro de instalação e o nome dos arquivos que armazenam os verbetes.&lt;/p&gt;
&lt;p&gt;Apenas para constar, segue a lista de artigos sobre este projeto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Conversor de Houaiss para Babylon - parte 1&lt;/li&gt;
&lt;li&gt;Conversor de Houaiss para Babylon - parte 2&lt;/li&gt;
&lt;li&gt;Segunda versão do Houaiss2Babylon&lt;/li&gt;
&lt;li&gt;HouaissParaBabylon versão beta&lt;/li&gt;
&lt;li&gt;HouaissParaBabylon versão 1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Foi uma odisseia e tanto. E ainda está longe de ser perfeito. Contudo, fico feliz que muitas pessoas já tenham conseguido usá-lo com sucesso e com a qualidade técnica dos meus visitantes. O Henrique, por exemplo, teve que entender o processo interno que o programa faz para renomear os arquivos do dicionário e assim conseguir a conversão. Pessoas como essa faltam na equipe de suporte técnico de programadores de baixaria.&lt;/p&gt;
&lt;p&gt;Isso me faz lembrar que uma das motivações do programador, fora programar, é saber que os usuários usam seu programa. E saber que existem melhorias a ser feitas que vão ser úteis para esses usuários é muito legal. Por isso, continuem assim, caros usuários. E bom proveito!&lt;/p&gt;
&lt;p&gt;Obs.: Essa versão foi testada em um Windows XP com o Houaiss 3, Babylon 8 e o Babylon Builder mais atual.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>HouaissParaBabylon versão 1.1</title>
  <link>http://www.caloni.com.br/houaissparababylon-versao-11/</link>
  <pubDate>2008-12-30</pubDate>
  
  <guid>http://www.caloni.com.br/houaissparababylon-versao-11/</guid>
  <description>&lt;p&gt;Saindo mais um do forno.&lt;/p&gt;
&lt;p&gt;Essa nova versão do conversor do dicionário Houaiss para Babylon corrige o problema de não encontrar o Houaiss 1.0. O problema ocorria porque o conversor se baseava na localização do desinstalador para encontrar o dicionário. Na primeira versão do dicionário o desinstalador fica na pasta c:\Windows, onde obviamente não estava o dicionário.&lt;/p&gt;
&lt;p&gt;Nessa nova versão, além de procurar o caminho do dicionário no registro (desinstalador) e antes de pedir para o usuário o caminho correto é tentado o caminho padrão de instalação, %programfiles%\Houaiss. Se mesmo assim o dicionário não existir continuamos perguntando para o usuário, que tem a opção de dizer onde está instalado o dicionário no disco rígido ou apontar diretamente para o CD de instalação.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>HouaissParaBabylon versão beta</title>
  <link>http://www.caloni.com.br/houaissparababylon-versao-beta/</link>
  <pubDate>2008-11-15</pubDate>
  
  <guid>http://www.caloni.com.br/houaissparababylon-versao-beta/</guid>
  <description>&lt;p&gt;Depois de muitos fins-de-semana divididos em horas picadinhas de programação de lazer, está disponível em vosso saite a primeira versão para usuários do conversor do dicionário Houaiss para o aplicativo Babylon.&lt;/p&gt;
&lt;p&gt;Foi uma longa jornada, sim, mas espero que valha a pena para quem esperou. Também espero poder receber inúmeras respostas com dúvidas, sugestões e até mesmo mais problemas que vierem a acontecer.&lt;/p&gt;
&lt;p&gt;Segue um pequeno roteiro do funcionamento do programa, que é bem simples, aliás. Para que tudo dê certo, no entanto, é necessário que o computador onde será feita a conversão possua os três programas abaixo instalados e funcionamento corretamente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dicionário Houaiss. Testado na versão 2, deve ser instalado com opção de cópia dos arquivos no disco rígido.&lt;/li&gt;
&lt;li&gt;Babylon. Testado nas versões 6 e 7. Pode ser registrado ou não.&lt;/li&gt;
&lt;li&gt;Babylon Builder. O construtor dos dicionários Babylon. Apesar de ser possível construir dicionários personalizados para o Babylon, é necessário que se use esse aplicativo conversor. O HouaissParaBabylon o usa, e por isso precisa que ele esteja instalado corretamente.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tudo isso verificado, basta então clicar no botão de Iniciar Conversão, sentar e esperar. A primeira fase envolve três passos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Desencriptação do dicionário original. Isso é feito baseando-se em nossa análise de engenharia reversa.&lt;/li&gt;
&lt;li&gt;Montagem do projeto de dicionário Babylon. Para isso existe um processo de interpretação do formato Houaiss, agora desencriptado, e sucessivas traduções para um projeto que o Babylon Builder irá entender.&lt;/li&gt;
&lt;li&gt;Construção do dicionário Babylon. Essa parte é feita pelo Babylon Builder. Por ser o maior dicionário de português da atualidade, esse processo pode demorar bastante, e com certeza irá se tornar o maior dicionário já instalado na sua lista de dicionários do Babylon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Na segunda fase, após toda essa movimentação de HD, existe apenas uma coisa a fazer: instalar o dicionário no Babylon.&lt;/p&gt;
&lt;p&gt;Quem faz isso é o próprio Babylon, se devidamente instalado. Se tudo deu certo, o HouaissParaBabylon sai de fininho e deixa o usuário com o progresso da instalação do dicionário Houaiss-Babylon.&lt;/p&gt;
&lt;p&gt;Se não for encontrado o dicionário Houaiss devidamente instalado no disco rígido, será exibida uma mensagem de erro pedindo que a instalação seja feita dessa maneira. Se, contudo, não for possível localizar a instalação do dicionário, será pedido ao usuário que diga onde ela se encontra, ou aponte para a pasta &amp;quot;Houaiss&amp;quot; em seu CD de instalação, uma dica suficiente para que a operação seja bem-sucedida.&lt;/p&gt;
&lt;p&gt;Outros erros comuns, como o Babylon Builder não instalado, serão obviamente avisados ao usuário. Erros mais raros terão um tratamento mais genérico. No entanto, nem por isso ele está livre de solução. Ao sair de uma conversão mal-sucedida, o usuário tem a opção de exportar o log de operações que foram realizadas durante a malfadada operação. Dessa forma, ele próprio conseguirá diagnosticar o problema ou, em casos mais sérios, me enviar o resultado de suas tentativas.&lt;/p&gt;
&lt;p&gt;E é isso. Para uma versão inicial, talvez esteja razoável. Quem confirmará serão os ansiosos usuário que, espero sinceramente, consigam seus objetivos há tempos aguardados.&lt;/p&gt;
</description>
</item>

     
        <item>
  <title>MouseTool: clique automático do seu rato</title>
  <link>http://www.caloni.com.br/mousetool-clique-automatico-do-seu-rato/</link>
  <pubDate>2008-05-21</pubDate>
  
  <guid>http://www.caloni.com.br/mousetool-clique-automatico-do-seu-rato/</guid>
  <description>&lt;p&gt;Bem, como a maioria de você já sabe, eu realmente não gosto de mouses. Apesar disso respeito os usuário que usam-no e até gostam dele. Essa é a razão por que estou escrevendo mais uma vez sobre isso. Dessa vez, irei mostrar um programa que eu uso todos os dias: MouseTool, para os usuários que  não usam o mouse, mas gostam dele [1].&lt;/p&gt;
&lt;p&gt;O principal objetivo do programa é evitar de clicar no mouse, simulando um clique toda vez que o usuário pára de mover o ponteiro. E é só isso: simples, eficiente e mouseless =).&lt;/p&gt;
&lt;p&gt;Existem algumas outras opções como arrastar-e-soltar e clique-duplo, ambas disponíveis pelo próprio programa através de atalhos do teclado ou mudança de estado, situação onde o usuário antes pousa o ponteiro sobre a ação desejada e depois pousa o ponteiro sobre o alvo, dessa forma alternando entre os três modos.&lt;/p&gt;
&lt;p&gt;O MouseTool originalmente foi uma ferramente de fonte aberto. Isso significa que a última versão do código-fonte está disponível, certo? Errado. Na verdade, eu não consegui, por mais que tentasse achar,  a versão para baixar do código.&lt;/p&gt;
&lt;p&gt;Felizmente meu amigo Marcio Andrey [2] já havia baixado o fonte algum tempo atrás e, assim como eu, ele gostaria de torná-lo disponível para todos que gostassem de usá-lo e alterá-lo. Por isso que estou publicando-o aqui. Ele é gratuito e aberto. Façam o que quiserem com ele =).&lt;/p&gt;
&lt;p&gt;Vamos aproveitar o código-fonte e mostrar como explorar um código não escrito por nós. Normalmente as primeiras coisas a fazer são: baixar o arquivo compactado e descompactá-lo dentro de uma nova pasta. Dessa forma encontramos o arquivo de projeto (nesse caso, MouseTool.dsw) e tentamos abri-lo. Falhando de início miseravelmente porque acredito que ninguém mais utilize a versão do Visual Studio que abre isso.&lt;/p&gt;
&lt;p&gt;Normalmente programadores de projetos de fonte aberto estão acostumados a obter os arquivos-fonte, modificá-los, publicá-los e assim por diante. Porém isso não é quase nunca verdade para programadores Windows de aplicativos estritamente comerciais. É necessário se reajustar à nova cultura para aproveitar os benefícios da política de fonte aberto.&lt;/p&gt;
&lt;p&gt;Por exemplo, dados os arquivos-fonte, nós podemos explorar algumas partes interessantes de coisas que gostaríamos de fazer em nossos próprios programas. São trechos pequenos de código que fazem coisas úteis que gastaríamos algumas horas/dias para pesquisar na internet e achar a resposta procurada. Através de um projeto de fonte aberto, conseguimos usar um programa e ao mesmo tempo aprender seu funcionamento. E a principal parte é: nós temos o fonte, mas não os direitos autorais.&lt;/p&gt;
&lt;p&gt;Clique no link no final do post [3] para baixar o programa, e faça bom uso dele.&lt;/p&gt;
&lt;p&gt;PS: MouseTool agora tem uma versão Linux em um projeto no Source Forge! Seu nome é GMouseTool, projeto criado por Márcio de Oliveira [2].&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&#34;https://blog.codinghorror.com/going-commando-put-down-the-mouse/&#34;&gt;https://blog.codinghorror.com/going-commando-put-down-the-mouse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&#34;http://marcioandreyoliveira.blogspot.com/search/label/GMouseTool&#34;&gt;http://marcioandreyoliveira.blogspot.com/search/label/GMouseTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&#34;https://github.com/Caloni/mtool&#34;&gt;https://github.com/Caloni/mtool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>

     
        <item>
  <title>MouseTool</title>
  <link>http://www.caloni.com.br/mousetool/</link>
  <pubDate>2007-11-13</pubDate>
  
  <guid>http://www.caloni.com.br/mousetool/</guid>
  <description>&lt;p&gt;Well, as most of you already know, I really don&#39;t like mice. Nevertheless I respect the users who use it and like it. That is the reason why I am writing a little more about it. This time, I going to show a program I use every day: MouseTool, for the users who does not use the mouse and like it.&lt;/p&gt;
&lt;p&gt;The program main purpose is to avoid clicking the mouse, simulating a click every time the user stops to move the cursor. Just this: simple, efficient and mouseless =).&lt;/p&gt;
&lt;p&gt;There are some options like drag-and-drop and double-click, both available through the program. You can choose to use a keyboard shortcut or the mode state, where you can switch the program default among simple-click, double-click and drag-and-drop.&lt;/p&gt;
&lt;p&gt;MouseTool was originally a open source tool. That means the lastest open source code is available, right? Wrong. Actually, I was unable to find it in every place I looked for.&lt;/p&gt;
&lt;p&gt;Fortunately, my friend Marcio Andrey [2] has got the source, and just like me, he wanted to make it available to everyone who would like to use it and change it. That&#39;s why I&#39;m publishing it here. It&#39;s free, and it&#39;s 4all =).&lt;/p&gt;
&lt;p&gt;Let&#39;s make use of this source and show how to explore a code not written by us. Normally the first things to do are: download the compacted file and extract the files into a new folder. So we find the project file (in this case, MouseTool.dsw) and try to open it. The result is a total failure, because I believe no one use the Visual Studio version that opens this kind of file (it will convert it to another one).&lt;/p&gt;
&lt;p&gt;Normally open source projects programmers are used to get the source code files, modify them, use them, publish them and all. But this is not always true about strict Windows commercial programmers.&lt;/p&gt;
&lt;p&gt;Given the source files, we can explore some interesting parts we&#39;d like to do someday in our own programs. And the main part is: we have the source, but not the copyright.&lt;/p&gt;
&lt;p&gt;Click in the link in the end of the post and make good use of it [3].&lt;/p&gt;
&lt;p&gt;PS: MouseTool now has a home page and a Source Forge project! Its new name is GMouseTool [2].&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&#34;https://blog.codinghorror.com/going-commando-put-down-the-mouse/&#34;&gt;https://blog.codinghorror.com/going-commando-put-down-the-mouse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&#34;http://marcioandreyoliveira.blogspot.com/search/label/GMouseTool&#34;&gt;http://marcioandreyoliveira.blogspot.com/search/label/GMouseTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&#34;https://github.com/Caloni/mtool&#34;&gt;https://github.com/Caloni/mtool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>

     
        <item>
  <title>ToDoList</title>
  <link>http://www.caloni.com.br/todolist/</link>
  <pubDate>2007-08-27</pubDate>
  
  <guid>http://www.caloni.com.br/todolist/</guid>
  <description>&lt;p&gt;Vou aproveitar que o recente blogue do meu amigo resolveu falar um pouco sobre administração de tempo e citar a ferramenta que venho utilizando há quase um ano para tentar organizar minhas idéias, minhas tarefas e minha vida. Assim como o Kabloc, eu estava em sérias dificuldades para tentar fazer e organizar todas as coisas que eu tinha em mente. Ainda continuo com dificuldades para fazer, mas o mais importante é que agora eu tenho um roadmap de para onde eu quero ir.&lt;/p&gt;
&lt;p&gt;Eu sempre ouvi falar nesse programa desde que freqüento o The Code Project, um sítio onde programadores publicam seus minicódigos para serem aproveitados (e avaliados) por toda a comunidade. Possuo algumas pequenas contribuições por lá.&lt;/p&gt;
&lt;p&gt;O fato é que por preguiça de testar e pelo seu screenshot inicial, me pareceu um programa demasiado complexo e pesado. Por isso passei vários anos sem sequer baixá-lo.&lt;/p&gt;
&lt;p&gt;No entanto, houve um momento em minha vida em que eu precisava definitivamente reunir e organizar todas as minhas idéias e atividades para conseguir concluí-las, tanto no trabalho quanto na vida pessoal. Houve então uma pequena pesquisa de minha parte de programas que fizessem o que eu precisava. Foi aí que eu baixei e testei o ToDoList, um programa pequeno, portátil (posso levar em meu PenDrive) e muito flexível. Eis abaixo o screenshot original do artigo do Code Project:&lt;/p&gt;
&lt;p&gt;Bem, me parecia mais do que eu precisava. No entanto ele é flexível, e suas colunas podem ser configuradas da maneira que lhe aprouver. Abaixo um screenshot de como utilizo o ToDoList:&lt;/p&gt;
&lt;p&gt;Entre algumas coisas legais que gosto nesse programa que me fizeram ficar com ele, consigo me lembrar da seguinte lista:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Posso levar onde quiser e salvar minhas configurações em um arquivo ini.&lt;/li&gt;
&lt;li&gt;Ele fica na área de notificação e posso ativá-lo com um atalho global.&lt;/li&gt;
&lt;li&gt;Ele conta o tempo de uma tarefa se você quiser.&lt;/li&gt;
&lt;li&gt;Ele exporta as listas em formatos como Excel, HTML e texto puro.&lt;/li&gt;
&lt;li&gt;Ele é pequeno e não precisa de instalação.&lt;/li&gt;
&lt;li&gt;O código-fonte é disponível e está sempre sendo atualizado.&lt;/li&gt;
&lt;li&gt;Posso salvar minhas listas em XML (padrão) ou encriptado.&lt;/li&gt;
&lt;li&gt;Pode ser estendido por meio de &lt;em&gt;plugins.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bem, ele sozinho não resolveu meus problemas. Assim como o Kabloc disse, é você, e unicamente você, o responsável por organizar a sua agenda. E eu tive que passar muito tempo junto da minha para conseguir encontrar a maneira ideal para eu trabalhar. Cada um tem a sua.&lt;/p&gt;
&lt;p&gt;Há um tempo atrás não acreditava muito em idéias, mas a partir de um dado momento um outro amigo meu conseguiu me convencer que idéias são os verdadeiros motores do mundo, e um mundo sem idéias seria um mundo de fazedores de coisas sem cabeça. Não adianta ser muito bom no que se faz se não se pensa no que se faz. Essa é um boa razão para explicar por que boas idéias permanecem para sempre, mesmo que seus criadores já tenham morrido há muito tempo.&lt;/p&gt;
&lt;p&gt;Por esse motivo que uso o ToDoList para catalogar e listar todas as idéias que tenho sobre o que pretendo fazer. Como você deve adivinhar, a lista nunca acaba e só tende a crescer. Mas tudo bem, o objetivo não é acabar, mas sim não perder a idéia que se teve, pois ela aos poucos pode ser extendida e aprimorada no próprio ToDoList, até chegar a hora de implementar. Quando for a hora de botar a mão na massa muito dos problemas já foi pensado e analisado naqueles momentos de divagação no banheiro, no ônibus, ou na sala de aula. Os momentos mais frutíferos, aliás.&lt;/p&gt;
&lt;p&gt;Porém, é claro que catalogar tudo também não é tudo. É preciso agir. Por esse motivo costumo dividir minhas tarefas em duas listas (fora a da empresa onde trabalho): Curto Prazo e Longo Prazo. As tarefas no curto prazo são as mais imediatas, e representam as coisas que devo fazer antes da semana, do mês ou do ano acabar. Geralmente dou uma olhada diária nessa lista. As de longo prazo não são menos importantes, mas possuem um tempo de finalização mais longo, ou porque não são interessantes atualmente, ou porque fazem parte do meu projeto de vida, algo que se deve pensar mais e agir aos poucos. Costumo dar uma olhada semanal nessa lista.&lt;/p&gt;
&lt;p&gt;Enfim, cada pessoa tem sua maneira de encarar problemas, catalogar idéias e fazer acontecer. Essa ferramenta, na minha opinião, pode ajudar. Recomendo também dar uma olhada nos sítios recomendados pelo Kabloc. Aliás, agora que ele está de sítio novo, espero que ele consiga tempo para mantê-lo e seguir seus próprios conselhos =).&lt;/p&gt;
&lt;p&gt;Para continuar divagando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Artigo no Code Project sobre a ferramenta (e &lt;em&gt;link&lt;/em&gt; para &lt;em&gt;download).&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sítio do criador do programa (com mais recursos para baixar).&lt;/li&gt;
&lt;li&gt;Como fazer cronogramas (dicas simples e rápidas para programadores).&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>

     
    
  </channel>
</rss>
