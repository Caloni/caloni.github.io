<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>essays on Blogue do Caloni</title>
    <link>http://www.caloni.com.br/categories/essays/</link>
    <description>Recent content in essays on Blogue do Caloni</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 14 Nov 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.caloni.com.br/categories/essays/" rel="self" type="application/rss+xml" />
    
     
        <item>
  <title>Sobre Nosso Déficit de Atenção</title>
  <link>http://www.caloni.com.br/sobre-nosso-deficit-de-atencao/</link>
  <pubDate>2020-11-14</pubDate>
  
  <guid>http://www.caloni.com.br/sobre-nosso-deficit-de-atencao/</guid>
  <description>Nossa sociedade produtiva está doente, mas apenas constatar o fato não começa o tratamento. Nós sabemos os sintomas e a causa. A causa é a evolução tecnológica se aproveitando de nossas falhas biológicas por grandes corporações para vender anúncios. Os sintomas é uma geração inteira diminuindo sua capacidade de concentração e vivendo como autômatos que clicam em links.
Ironicamente existe uma análise 1 feita por Tristan Harris, ex-eticista do Google e filósofo, que relaciona a &amp;quot;indústria da atenção&amp;quot; com a de alimentos, que aumenta níveis de sal, açúcar e outros condimentos para manipular nossa tendência a esses sabores. A nova indústria de entretenimento online utiliza a mesma estratégia, exacerbando nosso mecanismo de recompensas orientado por injeção de dopamina para fazer-nos cada vez mais checar por notificações quando estamos entediados, em um sistema de feedback positivo cujo final é não termos mais paciência para a realidade em nossa volta, e não conseguirmos mais parar de navegar pela infinitas luzes piscantes nas telas de nossos celulares.
No livro Deep Work, de Cal Newport, o autor apresenta uma defesa de que é cada vez mais preocupante a escassez de pessoas no mercado com a habilidade de conseguir se concentrar por muito tempo em tarefas que exigem total atenção. Três trabalhos citados no livro, de William Powers 2, John Freemans 3 e Alex Soojung-Kin 4, concordam que ferramentas de networking estão monopolizando nossa atenção, ao mesmo tempo que degradando nossa capacidade de permanecer focados.
Apesar de sabermos desse efeito desde o nascimento da TV e dos vídeo-games, é agora que a causa científica da epidemia dos devaneios crônicos está chegando em um consenso. A resposta estaria ligada a uma camada gordurosa de tecido que envolve a conexão entre axônios no cérebro chamada mielina. Sua função é proteger e melhorar a comunicação entre as células cerebrais, e melhora aqui se traduz em trocas mais rápidas de informação dentro do cérebro (e com menos ruído).
Essa camada é construída naturalmente em torno das conexões mais usadas pela repetição de seu uso. As responsáveis por construí-las são outras células que mantêm o sistema neurológico. Elas detectam o uso repetido de neurônios e produzem camadas de mielina para proteger essas conexões.
A tradução leiga dessa descoberta científica já é de conhecimento comum há gerações: quando alguém se concentra em aprender algo os alicerces do conhecimento se tornam mais sólidos. Sabemos agora pela ciência que isso acontece porque quando a pessoa está efetuando uma única atividade sem distrações a tarefa de inocular as conexões cerebrais responsáveis por manter a informação não precisa ser compartilhada com outras fontes de atenção. É por isso que se alguém está aprendendo um novo idioma enquanto checa o Instagram essa pessoa absorve menos do que alguém 100% focado no novo conhecimento.
O importante a se lembrar desse processo no cérebro é que ele é permanente. A pessoa não consegue mais absorver melhor novo conhecimento sobre um assunto com o mesmo potencial se estivesse aprendendo pela primeira vez. Claro que com mais prática sabemos ser possível melhorar em qualquer área, mas a própria habilidade em aprender está sujeita a essa dinâmica de fortalecimento cerebral, e portanto abalada pelas constantes interrupções e multitasking da vida moderna.
Paradoxalmente, por outro lado, é conhecido que a melhor maneira de relembrar um conhecimento obtido anteriormente é interrompê-lo sem concluí-lo. O efeito Zeigarnik, nomeado por causa da cientista soviética que o descobriu, é o motivo pelo qual é muito mais simples continuar o trabalho do dia anterior se ele estiver com lacunas a ser preenchidas. Exemplos seriam um escritor que deixa um parágrafo pela metade ou um estudante que deixa um cálculo matemático a terminar. É importante lembrar, porém, que houve tentativas mais recentes de tentar reproduzir este efeito sem sucesso. Acredite com cautela.
Por fim, a tecnologia crescente pode estar desempenhando uma mudança mais significativa do que imaginamos na concepção do que é ser humano. Essa afirmação não está pautada em estudos, mas em observação humana. Daniel, o autor do texto Technology is Heroin 5, relaciona o uso passivo da evolução em comunicação e entretenimento com a evolução do uso de drogas como heroína e ópio na época que eram comprados na farmácia da esquina. Na época a sociedade diminuiu sua produtividade, a economia começou a sofrer e a função humana nas relações sociais e de trabalho estava colapsando como um todo (carece de fontes). E a tecnologia poderia ser a segunda onda a destruir essas mesmas relações, ou transformá-las de maneira radical.
O surgimento do gramofone, do rádio, da TV e dos video-games, segundo o autor, está tornando as relações dos indivíduos com sua realidade cada vez mais um ato passivo, e não mais ativo, como era quando os tempos eram mais difíceis ou manuais, e até visitar um amigo ou ouvir sua música favorita era um esforço e tanto. Claro que o texto parte de um ponto de vista mais bucólico e talvez possa ser descartado em seu todo, mas sua mensagem parece possui algo inerentemente verdadeiro nos tempos de hoje: observamos jovens e adultos cada vez mais passivos e alheios à sua realidade, cada um criando sua própria bolha para se proteger do mundo cruel que um dia existiu lá fora.
  How Technology Hijacks People’s Minds, Tristan Harris, 2016. Fiz anotações. &amp;#x21a9;&amp;#xfe0e;
 Hamlet&#39;s BlackBerry. William Powers. &amp;#x21a9;&amp;#xfe0e;
 The Tyranny of E-mail. John Freemans. &amp;#x21a9;&amp;#xfe0e;
 Pangs The Distraction Addiction. Alex Soojung-Kin. &amp;#x21a9;&amp;#xfe0e;
 Technology is Heroin, by Daniel. &amp;#x21a9;&amp;#xfe0e;
   </description>
</item>

     
        <item>
  <title>Barata Elétrica e o hacker de antigamente</title>
  <link>http://www.caloni.com.br/barata-eletrica-e-o-hacker-de-antigamente/</link>
  <pubDate>2007-08-31</pubDate>
  
  <guid>http://www.caloni.com.br/barata-eletrica-e-o-hacker-de-antigamente/</guid>
  <description>Os artigos escritos por ele estavam em português, mas sempre em suas edições ele disponibilizava artigos de outras partes do mundo em inglês. Praticamente li todos eles, e muitos fiz questão de ler mais de uma vez. A maioria falava de um mundo que existia antes de eu ter um computador, onde existiam vírus e pirataria de programas em disquetes, BBSs e a tal reserva de mercado. Além, é claro, de dicas de como ser um nerd e não perder a sociabilidade (se é que isso é possível quando se é um nerd adolescente). Existe uma página no zine onde estão listados os melhores artigos de todos os tempos da revista.
Além do Barata Elétrica existiam outras revistas internacionais &amp;quot;bem conceituadas&amp;quot; na época, como a CCC (Chaos Computer Club), uma comunidade de hackers e crackers (o início do Astalavista!) fundada na Alemanha, e a 2600 Quarterly, constantemente perseguida pela polícia dos Estados Unidos depois das aprontadas de Kevin Mitnick, um praticante de engenharia social famoso da época. Como ainda eu ainda engatinhava no inglês, tive que me virar com o que tinha, um dicionário na mão e muita vontade de aprender. Não entendia muito, é verdade, mas minha atitude fez com que o inglês aprendido me valesse até hoje.
Naquela época, além de computadores, programação, muito café e coca-cola, meus interesses estavam bem mais voltados em entender como a sociedade progrediria diante dessa revolução tecnológica que estava acontecendo naquele momento. Como ficariam nossos direitos civis dentro da rede? Quem seria julgado por um crime digital e, talvez mais importante, quem seria o executor desse julgamento? O que seria direito digital? Como fica nossa privacidade? Todas essas questões me levaram a ler livros que recomendo fortemente, como 1984, Revolução dos Bichos e Admirável Mundo Novo. Todos falam de sociedades fictícias, mas cujas características estão muito mais presentes entre nós do que os estereótipos das novelas televisivas. Eles não falam muito sobre computadores nem programação, mas são muito bons para a formação crítica de um indivíduo sobre a sociedade em que ele vive.
Enfim, acho que já deu pra perceber que esse artigo não é sobre C&#43;&#43;, Windows, Engenharia Reversa ou computadores. É muito mais um lapso nostálgico que me ocorreu sobre o que era ser um hacker naquela época: ansiar avidamente por conhecimento, mas não um conhecimento qualquer, que termina nele mesmo, regurgitado junto das milhares de notícias diárias. É um conhecimento sadio, apreciado e mastigado lentamente, com consciência, com perseverança. Não havia aquele desânimo por falta de tempo em aprender todas as coisas, mas o contrário: o ânimo por existir mais e mais conhecimento a ser apreciado, discutido e refletido. A troca de informações entre as pessoas era muito importante. O adjetivo hacker da época não estava na capacidade em invadir sistemas, mas em sua atitude em aprender coisas novas, ampliar sua visão do mundo e ter humildade o suficiente para concluir que nessa vida só se aprende um grão de areia de uma praia gigantesca. Bons tempos em que não saber não era vergonha de nada, mas uma oportunidade a mais.
O tempo passa, o mundo gira, e aqui estamos nós: orkut, msn, youtube, blogues, flogues e outros gues inventados a cada dia. As pessoas estão conectadas, e cada vez mais estarão. E para quê? Para trocar mensagens, emoticons, fotos, vídeos, informação. Sobre elas mesmas, sobre onde vivem, sobre onde moram. A tal da privacidade foi por água abaixo. Poucos possuem o discernimento do que podem e não podem fazer sem sofrer as conseqüências de ter sua vida inteira exposta através dos bits e bytes que nunca param de trafegar. A popularidade da rede transformou-a em um second life, literalmente. Para alguns, é até o first life mesmo. Isso é a escolha de cada um.
</description>
</item>

     
        <item>
  <title>Desejo insano de programar no kernel</title>
  <link>http://www.caloni.com.br/desejo-insano-de-programar-no-kernel/</link>
  <pubDate>2007-07-12</pubDate>
  
  <guid>http://www.caloni.com.br/desejo-insano-de-programar-no-kernel/</guid>
  <description>Muitas vezes meus amigos (um em particular) me perguntam por que não me interesso em programar em kernel mode, como se isso fosse um objetivo a ser alcançado por qualquer programador em user mode. Bom, não é.
Claro que sempre me empenho em entender como o sistema funciona, nos menores detalhes e sempre que posso, o que nem sempre me leva para o kernel mode (entender como a CLR funciona, por exemplo). Posso até me considerar um ser privilegiado, já que trabalho com dois experts em kernel mode e .NET, respectivamente. Isso já faz algum tempo, e ambos possuem conhecimento e experiência necessários para sanar minhas dúvidas mais cruéis. Porém, uma coisa é o conhecimento da coisa. Outra coisa é a prática. E a teoria, como já dizia o Sr. Heldai, na prática é outra.
Existem também aqueles programadores que, entorpecidos pela idéia de que seu software deve ser o mais baixo nível possível porque... bem, porque ele faz coisas muito profundas (?), ou é muito avançado (??), ou talvez até porque ele precisa ser otimizado ao máximo. Baseados nessas premissas (???), antes mesmo de conhecer o sistema operacional e pesquisar o que ele tem a oferecer que já está disponível em user mode partem direto para a programação nua e crua, pelo simples motivo de ser legal ou na ilusão de ser a melhor maneira de se fazer as coisas sob qualquer circunstância.
Munidos de bons motivos para fazer drivers, o próximo passo seria então pedir ajuda desesperadamente (e urgentemente) em listas de discussões. Talvez esse seja o lugar menos apropriado para procurar por uma palavra amiga. Acompanhei por um tempo uma lista de kernel do Windows. Apenas para efeitos de descrição, o clima e a impressão com que fiquei de lá foi que os programadores em kernel não se dão muito ao trabalho de ajudar aqueles que estão perdidos no ring0. Então para que existe a lista? Aparentemente para aqueles que já sabem fazer o carro andar, já conhecem o motor e um pouco de mecânica dos fluidos.
Digamos que é uma cultura bem diferente do que estamos acostumados a vivenciar em user mode. Eles estão muito mais ocupados com problemas relacionados especificamente com o desenvolvimento de drivers, e não dúvidas bestas do tipo &amp;quot;como eu faria isso&amp;quot;. Lá não se briga entre linguagens gerenciadas e não-gerenciadas (nem entre linguagens gerenciadas), mas entre linguagens C e C&#43;&#43;. Lá não se ajuda a fazer aquelas &amp;quot;gambis&amp;quot; que tanto ajudam o programador na hora do sufoco, mas sim redirecionam os hereges para o desenvolvimento &amp;quot;politicamente correto&amp;quot; (siga a documentação e seja feliz).
Isso não é uma crítica destrutiva, apenas uma descrição narrativa. Nada que falo aqui é exagero ou blasfêmia. Podem perguntar para o meu amigo de kernel mode. Aliás, use o blog dele para aprender um pouco sobre o kernel.
O fato é que bons programadores são bons onde quer que eles estejam (e os ruins serão ruins em qualquer lugar). E ser um desenvolvedor de qualidade exige tempo, dedicação, paciência e estudo. Pode ser um designer usando Action Script ou um engenheiro da NASA projetando foguetes. Tanto faz. Fazer as coisas com qualidade sempre exigirá mais tempo do que gostaríamos de despender. Não é uma questão de ser mais difícil em kernel mode ou mais fácil em Javascript. É saber qual dos dois será necessário usar para atingir o nível de funcionalidade e qualidade que o projeto exige. O resto é preconceito.
</description>
</item>

     
    
  </channel>
</rss>
